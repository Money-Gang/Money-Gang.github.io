{"version":3,"sources":["components/templates/login/login.js","components/organisms/slideContent.js","components/organisms/slideContent2.js","components/organisms/slider.js","components/templates/home/home.js","components/templates/dashboard/dashboard.js","components/organisms/header.js","App.js","serviceWorker.js","index.js"],"names":["useFormInput","initialValue","useState","value","setValue","onChange","e","target","Login","props","username","password","error","loading","class","type","autoComplete","style","marginTop","color","onClick","history","push","disabled","SlideContent","Background","process","path","className","title","backgroundImage","Slider","sliderArr","x","setX","goTo","event","parseInt","id","map","item","index","transform","length","src","Home","Dashboard","Header","to","App","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.fc2c5488.chunk.js","sourcesContent":["/*\n *  home.js\n *  MONEY GANG 2020-06-25\n *  MONEY GANG 2020-08-30\n *\n *  Created by [ Allan Nava ].\n *  Updated by [ Allan Nava ]\n *  Copyright © 2020 [ MONEY GANG Team ]. All rights reserved.\n */\n//\nimport React, { useState } from 'react';\n \nfunction Login(props) {\n  const username = useFormInput('');\n  const password = useFormInput('');\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n \n  // handle button click of login form\n  const handleLogin = () => {\n    props.history.push('/dashboard');\n  }\n \n  return (\n    <div class=\"container\">\n        prova\n      Login<br /><br />\n      <div>\n        Username<br />\n        <input type=\"text\" {...username} autoComplete=\"new-password\" />\n      </div>\n      <div style={{ marginTop: 10 }}>\n        Password<br />\n        <input type=\"password\" {...password} autoComplete=\"new-password\" />\n      </div>\n      {error && <><small style={{ color: 'red' }}>{error}</small><br /></>}<br />\n      <input type=\"button\" value={loading ? 'Loading...' : 'Login'} onClick={handleLogin} disabled={loading} /><br />\n    </div>\n  );\n}\n \nconst useFormInput = initialValue => {\n  const [value, setValue] = useState(initialValue);\n \n  const handleChange = e => {\n    setValue(e.target.value);\n  }\n  return {\n    value,\n    onChange: handleChange\n  }\n}\n//\nexport default Login;\n//","import React from 'react';\n\n\nexport default function SlideContent(props) {\n    let Background = process.env.PUBLIC_URL + props.path\n    return (\n        <div className=\"container\">\n            <div className=\"slide-content-text\">\n                <h1 className=\"slide-title\">{props.title}</h1>\n                <p className=\"slide-paragraph\">Cras ac mi diam. Donec condimentum eget\n                egestas. Nam diam eros, convallis quis justo in,\n                pellentesque arcu convallis quis justo in, dictum.\nAenean vehicula accumsan rhoncus. as </p>\n            </div>\n            <div className=\"slide-content-image\" style={{ backgroundImage: `url(${Background})` }}>\n\n            </div>\n        </div>\n    )\n}","import React from 'react';\n\n\nexport default function SlideContent(props) {\n    let Background = process.env.PUBLIC_URL + props.path\n    return (\n        <div className=\"container\">\n            <div className=\"slide-content-text-2\">\n                <h1 className=\"slide-title-2\">{props.title}</h1>\n                <p className=\"slide-paragraph-2\">Cras ac mi diam. Donec condimentum eget\n                egestas. Nam diam eros, convallis quis justo in,\n                pellentesque arcu convallis quis justo in, dictum.\nAenean vehicula accumsan rhoncus. as </p>\n            </div>\n            <div className=\"slide-content-image-2\" style={{ backgroundImage: `url(${Background})` }}>\n\n            </div>\n        </div>\n    )\n}","/*\n *  slider.js\n *  MONEY GANG 2020-06-25\n *  MONEY GANG 2020-09-12\n *\n *  Created by [ Allan Nava ].\n *  Updated by [ Allan Nava ]\n *  Copyright © 2020 [ MONEY GANG Team ]. All rights reserved.\n */\nimport React, { useState } from 'react'\n//\nimport SlideContent from './slideContent';\nimport SlideContent2 from './slideContent2';\nimport '../../App.css'\n//\nexport default function Slider() {\n\n    let sliderArr = [<SlideContent title=\"Hype Mapper: the new way to resell\" path=\"/img/first_slide_1.png\" />, <SlideContent2 title=\"Slide 2\" path=\"/img/first_slide_2.png\" />, <SlideContent2 title=\"Slide 3\" path=\"/img/first_slide_3.png\" />, <SlideContent title=\"Slide 4\" path=\"/img/first_slide_4.png\" />, <SlideContent title=\"Slide 5\" path=\"/img/first_slide_5.png\" />]\n\n\n\n    const [x, setX] = useState(0)\n\n\n    const goUp = () => {\n        x === 0 ? setX(-100 * (sliderArr.length - 1)) : setX(x + 100);\n    }\n\n    const goDown = () => {\n        x === -100 * (sliderArr.length - 1) ? setX(0) : setX(x - 100)\n\n    }\n\n    const goTo = (event) => {\n        let value = parseInt(event.target.id) * 100\n        setX(100 - value)\n    }\n\n    /* const newFunc = (KeyboardEvent) => {\n        console.log(\"probva \" + KeyboardEvent.key)\n        if (KeyboardEvent.key = \"KeyUp\") {\n            x === 0 ? setX(-100 * (sliderArr.length - 1)) : setX(x + 100);\n        }\n\n    } */\n\n\n    return (\n        <div className=\"slider\" /*onKeyDown={newFunc}*/>\n            {\n                sliderArr.map((item, index) => {\n                    return (\n                        <div className=\"slide\" style={{\n                            transform: `translateY(${x}%)`\n                        }}>\n                            {item}\n                        </div>\n                    )\n                })\n            }\n            <div id=\"go-up\" onClick={goUp}>\n                <img src={process.env.PUBLIC_URL + \"/img/arrow_up.png\"} />\n            </div>\n            <div id=\"go-down\" onClick={goDown}>\n                <img src={process.env.PUBLIC_URL + \"/img/arrow_down.png\"} />\n            </div>\n            <div id=\"slide-count\">\n                <div className={x === 0 ? 'rounded-selector rounded-selector-active' : 'rounded-selector'} id=\"1\" onClick={goTo} ></div>\n                <div className={x === -100 ? 'rounded-selector rounded-selector-active' : 'rounded-selector'} id=\"2\" onClick={goTo} ></div>\n                <div className={x === -200 ? 'rounded-selector rounded-selector-active' : 'rounded-selector'} id=\"3\" onClick={goTo} ></div>\n                <div className={x === -300 ? 'rounded-selector rounded-selector-active' : 'rounded-selector'} id=\"4\" onClick={goTo} ></div>\n                <div className={x === -400 ? 'rounded-selector rounded-selector-active' : 'rounded-selector'} id=\"5\" onClick={goTo} ></div>\n            </div>\n\n        </div >\n    )\n}","/*\n *  home.js\n *  MONEY GANG 2020-06-25\n *  MONEY GANG 2020-09-12\n *\n *  Created by [ Allan Nava ].\n *  Updated by [ Allan Nava ]\n *  Copyright © 2020 [ MONEY GANG Team ]. All rights reserved.\n */\nimport React, { useState } from \"react\";\nimport Slider from \"../../organisms/slider\";\n//\nexport default function Home({ props }) {\n    return (\n        <Slider></Slider>\n    );\n}\n//","/*\n *  home.js\n *  MONEY GANG 2020-06-25\n *  MONEY GANG 2020-09-12\n *\n *  Created by [ Allan Nava ].\n *  Updated by [ Allan Nava ]\n *  Copyright © 2020 [ MONEY GANG Team ]. All rights reserved.\n */\nimport React from 'react';\n //\nfunction Dashboard(props) {\n \n  // handle click event of logout button\n  const handleLogout = () => {    \n    props.history.push('/login');\n  }\n \n  return (\n    <div>\n      Welcome User!<br /><br />\n      <input type=\"button\" onClick={handleLogout} value=\"Logout\" />\n    </div>\n  );\n}\n//\nexport default Dashboard;\n///","/*\n *  header.js\n *  MONEY GANG 2020-06-25\n *  MONEY GANG 2020-09-12\n *\n *  Created by [ Allan Nava ].\n *  Updated by [ Allan Nava ]\n *  Copyright © 2020 [ MONEY GANG Team ]. All rights reserved.\n */\nimport React from 'react';\nimport {Link} from \"react-router-dom\";\n///\nexport default function Header() {\n    return (\n        <div className=\"header\">\n            <div className=\"header-logo\">\n                <Link  to=\"/\">Hype mapper</Link>\n            </div>\n            <div className=\"header-nav\">\n                <Link  to=\"/login\">Sign up</Link>\n                <Link to=\"/login\">Sign in</Link>\n            </div>\n        </div>\n    )\n}","/*\n *  App.js\n *  MONEY GANG 2020-06-25\n *  MONEY GANG 2020-09-12\n *\n *  Created by [ Allan Nava ].\n *  Updated by [ Allan Nava ]\n *  Copyright © 2020 [ MONEY GANG Team ]. All rights reserved.\n */\nimport React from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n//\nimport \"./App.css\";\n//import Slider from './components/organisms/slider';\nimport Login from './components/templates/login/login';\nimport Home from './components/templates/home/home';\nimport Dashboard from './components/templates/dashboard/dashboard';\nimport Header from './components/organisms/header';\n//\n//\nexport default function App() {\n  return (\n    <BrowserRouter>\n      <div class=\"container\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n        </Switch>\n      </div>  \n    </BrowserRouter>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}